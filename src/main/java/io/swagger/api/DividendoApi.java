/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Dividendo;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "dividendo", description = "the dividendo API")
@RequestMapping(value = "/dividendo", produces = { "application/json" })
public interface DividendoApi {

	@ApiOperation(value = "agregar un dividendo", nickname = "adicionarDividendo", notes = "agregar un dividendo nuevo", tags={ "administradores", })
	@ApiResponses(value = { 
		@ApiResponse(code = 201, message = "Dividendo Creado"),
		@ApiResponse(code = 400, message = "Datos incorrectos"),
		@ApiResponse(code = 409, message = "Ya existe el objeto") })
	@RequestMapping(value = "/{idDividendo}",
		produces = { "application/json" }, 
		consumes = { "application/json" },
		method = RequestMethod.POST)
	ResponseEntity<Void> adicionarDividendo(@ApiParam(value = "id del dividendo a buscar",required=true) @PathVariable("idDividendo") Long idDividendo,@ApiParam(value = "Informaci칩n del dividendo"  )  @Valid @RequestBody Dividendo dividendo);


	@ApiOperation(value = "buscar un dividendo", nickname = "buscarDividendo", notes = "ingresando un id v치lido se obtiene la informaci칩n del dividendo ", response = Dividendo.class, tags={ "administradores","accionistas", })
	@ApiResponses(value = { 
		@ApiResponse(code = 200, message = "dividendo encontrado", response = Dividendo.class),
		@ApiResponse(code = 400, message = "no existe el dividendo") })
	@RequestMapping(value = "/{idDividendo}",
		produces = { "application/json" }, 
		method = RequestMethod.GET)
	ResponseEntity<Dividendo> buscarDividendo(@ApiParam(value = "id del dividendo a buscar",required=true) @PathVariable("idDividendo") Long idDividendo);


	@ApiOperation(value = "Eliminar un dividendo", nickname = "eliminarDividendo", notes = "Eliminar un dividendo", tags={ "administradores", })
	@ApiResponses(value = { 
		@ApiResponse(code = 200, message = "Ok"),
		@ApiResponse(code = 400, message = "id no v치lido"),
		@ApiResponse(code = 404, message = "id no encontrado") })
	@RequestMapping(value = "/{idDividendo}",
		produces = { "application/json" }, 
		method = RequestMethod.DELETE)
	ResponseEntity<Void> eliminarDividendo(@ApiParam(value = "ID del dividendo a eliminar",required=true) @PathVariable("idDividendo") Long idDividendo);

}
